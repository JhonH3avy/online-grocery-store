version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: grocery-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: grocery_store_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - grocery-network

  # Redis for Sessions/Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: grocery-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - grocery-network

  # Application Server
  app:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: grocery-app
    restart: unless-stopped
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password@postgres:5432/grocery_store_db?schema=public
      FRONTEND_URL: http://frontend:80
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./server/uploads:/app/uploads
    networks:
      - grocery-network

  # React Frontend Application
  frontend:
    build:
      context: ./app
      dockerfile: Dockerfile
    container_name: grocery-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    depends_on:
      - app
    networks:
      - grocery-network

volumes:
  postgres_data:
  redis_data:

networks:
  grocery-network:
    driver: bridge
